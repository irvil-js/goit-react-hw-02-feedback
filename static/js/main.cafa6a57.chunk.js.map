{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Statistics","good","neutral","bad","total","positivePercentage","list","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","name","onClick","Notification","message","notification","App","state","handlerClick","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","positiveFeedback","Math","round","this","positiveFeedbackPercentage","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,KAAO,2B,gBCAjED,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,OAAS,kC,gBCAtFD,EAAOC,QAAU,CAAC,aAAe,qC,6JCWlBC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCOQI,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIR,UAAWC,IAAOQ,KAAtB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,W,gBCeWE,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEd,UAAWC,IAAOc,OAElBC,KAAK,SACLC,KAAMH,EACNI,QAASN,EALX,SAOGE,GALIA,S,iBCDEK,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGpB,UAAWC,IAAOoB,aAArB,SAAoCD,KCsE9BE,E,4MApEbC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,aAAe,SAACC,GACd,IAAMR,EAAOQ,EAAEC,OAAOT,KACtB,EAAKU,UAAS,SAACJ,GAAD,oBACZA,SACCN,EAAO,EAAKM,MAAMN,GAAQ,O,EAY/BW,mBAAqB,WACnB,MAA+B,EAAKL,MAGpC,OAHA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzBuB,gCAAkC,WAChC,IAAQzB,EAAS,EAAKmB,MAAdnB,KACF0B,EAAgB,EAAKF,qBACrBG,EAAmBC,KAAKC,MAAO7B,EAAO0B,EAAiB,KAE7D,OAAOC,GAAsC,G,4CAG/C,WACE,MAA+BG,KAAKX,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBwB,EAAgBI,KAAKN,qBACrBO,EAA6BD,KAAKL,kCAExC,OACE,qCACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAASyB,OAAOC,KAAKH,KAAKX,OAC1BX,gBAAiBsB,KAAKV,iBAGzBU,KAAKN,qBACJ,cAAC,EAAD,CAAS9B,MAAM,aAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPtB,mBAAoB2B,MAIxB,cAAC,EAAD,CAAcf,QAAQ,6B,GA9DdkB,a,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cafa6a57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__QSek1\",\"title\":\"Section_title__2wCez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__1PJaG\",\"list\":\"Statistics_list__3IJM3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FeedbackOptions_buttonContainer__1lTIA\",\"button\":\"FeedbackOptions_button__2EYCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3HP78\"};","import React from \"react\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.list}>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  props: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n  }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map((option) => (\n      <button\n        className={styles.button}\n        key={option}\n        type=\"button\"\n        name={option}\n        onClick={onLeaveFeedback}\n      >\n        {option}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return <p className={styles.notification}>{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handlerClick = (e) => {\n    const name = e.target.name;\n    this.setState((state) => ({\n      state,\n      [name]: this.state[name] + 1,\n    }));\n  };\n\n  // countTotalFeedback = () =>\n  //   this.state.good + this.state.neutral + this.state.bad;\n\n  // countPositiveFeedbackPercentage = () =>\n  //   this.state.good\n  //     ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n  //     : 0;\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedback = Math.round((good / totalFeedback) * 100);\n\n    return positiveFeedback ? positiveFeedback : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handlerClick}\n          />\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positiveFeedbackPercentage}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}